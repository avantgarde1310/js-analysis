**JavaScript Static Analysis Tool**

This package is a suite of tools to analyze JavaScript code statically. This 
was originally developed to analyze Google Chrome extensions.

The program is developed in Python 2.7 to maintain compatibility with 
pynarcissus.

Table of Contents:  

1.  alpharenamer.py  
2.  analyzer.py  
3.  astutils.py  
4.  converter.py  
5.  driver.py  
6.  fileutils.py  

Sub-modules of this program:

- 	alpharenamer.py
	Utility to alpha-rename JavaScript files. It has the following core 
	functions:
	
	>	create_frames(ast)
		Creates a Frame object that is required to perform alpha-renaming. 
		The input is an AST generated by pynarcissus.
	> 	alpha_rename(frame, ast)
		Performs alpha-renaming on the code represented by the Frame object,
		and performs necessary changes on the AST also.

-------------------------------------------------------------------------------

-	analyzer.py
	An older static analyzer tool that only counts the occurrences of "chrome"
	in a given JavaScript file. Obsolete.

-------------------------------------------------------------------------------

-	astutils.py
	A module to work with pynarcissus' AST. This is the entry point of most of
	the other modules in this program. It has the following core functions:
	
	> 	create_AST(js_path)
		Creates a pynarcissus AST from the JavaScript file specified in 
		js_path.
	>	create_AST_from_string(string)
		Creates a pynarcissus AST from a string containing JavaScript code.
	> 	traverse_AST(node, fn, postfn)
		Traverses the whole pynarcissus AST, executing fn and postfn in 
		pre-order and post-order respectively. Functions passed onto the fn 
		and postfn argument have to have the signature: fn(node). 
	> 	traverse_AST_level(node, fn, postfn, level)
		Similar to above, except the traverse keeps track of the recursion 
		depth. Functions passed onto fn and postfn arguments have to have the 
		following signature: fn(node, level)

-------------------------------------------------------------------------------

-	converter.py
	A simple converter module to convert data from the log file generated by 
	this program in this format:
	
	    Extension Name: Clip to Evernote
	    Extension Identifier: pioclpoplcdbaefihamjohnefbikjilc
		Number of functions: 4241
		Number of anonymous functions: 4009
		Number of named functions: 232
		Number of functions that reference chrome: 170
	
	to this format:
	
		Clip to Evernote & 4241 & 170 & 4.0 \\ \hline

-------------------------------------------------------------------------------

-	driver.py
	The core module of this package. It looks for all the JavaScript files in 
	an extension folder (a folder with the 32-character identifier), combines 
	all of them into one large string, and performs alpha-renaming.
	
-------------------------------------------------------------------------------
	
-	fileutils.py
	A generic utility to work with files and directories.